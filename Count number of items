import cv2
import numpy as np

def count_items_in_compartments(image_path):
    # Load YOLO model and configuration
    net = cv2.dnn.readNet("yolov3.weights", "3.jpeg")
    layer_names = net.getUnconnectedOutLayersNames()

    # Read image
    image = cv2.imread(image_path)
    height, width, _ = image.shape

    # Preprocess image for YOLO
    blob = cv2.dnn.blobFromImage(image, 0.00392, (416, 416), (0, 0, 0), True, crop=False)
    net.setInput(blob)

    # Get output layer information
    outs = net.forward(layer_names)

    # Define regions of interest (ROIs) for different compartments
    # (You may need to manually define or segment compartments based on your images)
    compartment_rois = [
        {"name": "Compartment1", "roi": (0, 0, width // 2, height)},
        {"name": "Compartment2", "roi": (width // 2, 0, width, height)}
        # Add more compartments as needed
    ]

    # Initialize counts for each compartment
    compartment_counts = {compartment["name"]: 0 for compartment in compartment_rois}

    # Iterate through each detected object
    for out in outs:
        for detection in out:
            scores = detection[5:]
            class_id = np.argmax(scores)
            confidence = scores[class_id]

            if confidence > 0.5 and class_id == 0:  # Class ID for 'product/item'
                center_x = int(detection[0] * width)
                center_y = int(detection[1] * height)

                # Check which compartment the object belongs to
                for compartment in compartment_rois:
                    roi_x, roi_y, roi_width, roi_height = compartment["roi"]
                    if center_x >= roi_x and center_x <= roi_x + roi_width and \
                       center_y >= roi_y and center_y <= roi_y + roi_height:
                        compartment_counts[compartment["name"]] += 1
                        break  # Object is assigned to one compartment only

    # Display counts for each compartment
    print("Item counts in each compartment:")
    for compartment, count in compartment_counts.items():
        print(f"{compartment}: {count} items")

# Example usage
image_path = "C:\Users\manoz\Downloads\data\data\Task1 data"
count_items_in_compartments(image_path)
